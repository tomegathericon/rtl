#!/bin/zsh
set -x

cidr_vpc=6.255.255.0/24
cidr_subnet=$cidr_vpc
aws_profile=kapoor.neelima@outlook.com
key_dir=keys
key_name=aws-$(openssl rand -hex 8)
sg_name=OpenWorld
ami_id=ami-b73b63a0
instance_type=t2.micro
blockmapping=skeletons/ec2_block_mapping
userdata=userdata/amazon-linux

vpc_id=$(aws ec2 create-vpc  --cidr-block $cidr_vpc --profile $aws_profile | jq '.Vpc.VpcId' | sed 's/"//g')

subnet_id=$(aws ec2 create-subnet --vpc-id $vpc_id --cidr-block $cidr_subnet --profile $aws_profile | jq '.Subnet.SubnetId' | sed 's/"//g')

ig_id=$(aws ec2 create-internet-gateway --profile $aws_profile | jq '.InternetGateway.InternetGatewayId' | sed 's/"//g')

aws ec2 attach-internet-gateway --internet-gateway-id $ig_id --vpc-id $vpc_id --profile $aws_profile

rt_id=$(aws ec2 create-route-table --vpc-id $vpc_id --profile $aws_profile | jq '.RouteTable.RouteTableId' | sed 's/"//g')

aws ec2 associate-route-table --subnet-id $subnet_id --route-table-id $rt_id --profile $aws_profile

sed -i s{rt_id{$rt_id{g skeletons/create_route.skeleton
sed -i s{ig_id{$ig_id{g skeletons/create_route.skeleton

aws ec2 create-route --cli-input-json file://skeletons/create_route.skeleton --profile $aws_profile

sed -i s{$rt_id{rt_id{g skeletons/create_route.skeleton
sed -i s{$ig_id{ig_id{g skeletons/create_route.skeleton

elastic_ip=$(aws ec2 allocate-address --domain vpc --profile $aws_profile | jq '.PublicIp' | sed 's/"//g')

cd $key_dir

ssh-keygen -t rsa -f $key_name -N ''

aws ec2 import-key-pair --key-name $key_name --public-key-material "$(cat $key_name.pub)" --profile $aws_profile

sg_id=$(aws ec2 create-security-group --group-name $sg_name --description $sg_name --vpc-id $vpc_id --profile $aws_profile | jq '.GroupId' | sed 's/"//g')

aws ec2 authorize-security-group-ingress --group-id $sg_id --protocol all --port 0-65535 --cidr 0.0.0.0/0 --profile $aws_profile

cd -

instance_id=$(aws ec2 run-instances --image-id $ami_id --count 1 --instance-type $instance_type --key-name $key_name --subnet-id $subnet_id --security-group-ids $sg_id --user-data file://$userdata --block-device-mappings file://$blockmapping --profile $aws_profile | jq '.Instances | .[0].InstanceId' | sed 's/"//g' )

sleep 45

aws ec2 associate-address --instance-id $instance_id --public-ip $elastic_ip --profile $aws_profile
